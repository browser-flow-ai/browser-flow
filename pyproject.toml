[project]
name = "browser-flow"
version = "1.13.0"
description = "browser-flow Python Client"
authors = [
    {name = "Dalio", email = "y.champoo@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
keywords = ["automation", "web-scraping", "playwright", "ai", "testing"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "playwright>=1.40.0",
    "requests>=2.25.0",
    "pydantic>=2.0.0",
    "httpx>=0.28.1",
    "aiofiles>=23.0.0",
    "tf-playwright-stealth>=1.0.0",
    "typer>=0.7.0",
    "colorama>=0.4.6",
    "tenacity>=9.1.2",
    "litellm>=1.76.2",
    "langchain>=0.3.27",
    "langchain-openai>=0.3.33",
    "langchain-community>=0.3.29",
    "langgraph>=0.6.7",
    "langchain-core>=0.3.75",
    "python-dotenv>=1.1.1",
    "playwright-dompath>=0.0.1",
    "pydantic-ai>=1.0.10",
    "parsel>=1.6.0",
    "pyyaml>=6.0.2",
    "click>=8.3.0",
    "dashscope>=1.24.6",
    "beautifulsoup4>=4.9.0",
    "openai>=1.0.0",
    "nest-asyncio>=1.5.0",
    "pytest-asyncio>=0.21.0",
    "trafilatura[all] (>=2.0.0,<3.0.0)",
]

[project.scripts]

[tool.poetry]
packages = [
    { include = "browser_common" },
    { include = "browser_wrapper" },
    { include = "browser_flow" },
    { include = "browser_control" }
]


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.4"
ruff = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-time = "*"
mockito = "*"
pytest_env = "*"
pytest-asyncio = "*"
html-to-json = "*"
dill = "*"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["test"]
asyncio_default_fixture_loop_scope = "function"
log_cli = true
log_level = "WARNING"
filterwarnings = [
    "ignore::DeprecationWarning:fake_http_header.*",
    "ignore::DeprecationWarning:importlib.resources.*",
]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
docstring-code-line-length = 20

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501"]
exclude = ["script/**"]

[tool.pytest_env]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"